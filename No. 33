// 二分法最重要的地方在于有序，只要找到有序的部分就可以进行头尾比较；
class Solution {
    public int search(int[] nums, int target) {
        int len = nums.length;
        if(len == 0) return -1;
        if(len == 1) return nums[0] == target? 0: -1;
        int l = 0;
        int r = len-1;
        while(l<=r){
            int mid = (l + r) / 2;
            if(nums[mid] == target) return mid;
            if(nums[0] <= nums[mid]){      // left part is in order
                if(nums[0]<= target && target < nums[mid]){      //  if eqaul, it has been returned;
                    r = mid - 1;
                }
                else{
                    l = mid + 1;
                }
            }
            else{
                if(nums[mid] < target && target <= nums[r]){
                    l = mid + 1;
                }
                else{
                    r = mid - 1;
                }
            }
        }
        return -1;
    }
}
